<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hisign.code.persist.mapper.business.TableConnectionMapper" >
    <resultMap id="BaseResultMap" type="com.hisign.code.model.business.TableConnection" >
        <id column="ID" property="id" jdbcType="VARCHAR" />
        <result column="CONNECTION_NAME" property="connectionName" jdbcType="VARCHAR" />
        <result column="TABLE_NAME1" property="tableName1" jdbcType="VARCHAR" />
        <result column="COLUMN1" property="column1" jdbcType="VARCHAR" />
        <result column="TABLE_NAME2" property="tableName2" jdbcType="VARCHAR" />
        <result column="COLUMN2" property="column2" jdbcType="VARCHAR" />
        <result column="CONNECTION_TYPE" property="connectionType" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List" >
            ID, CONNECTION_NAME, TABLE_NAME1, COLUMN1, TABLE_NAME2, COLUMN2, CONNECTION_TYPE,
            get_dictValue_by_dictKey('LJLBDM', CONNECTION_TYPE)  AS connectionTypeZw
    </sql>

    <sql id="select_By_Filter_For_Where" >
        <where>
            <if test="connectionName != null and connectionName != ''">
                and CONNECTION_NAME = #{user.connectionName,jdbcType=VARCHAR}
            </if>
            <if test="tableName != null and tableName != ''">
                and TABLE_NAME1 in
                <foreach collection="tableName" item="item" index="index" separator="," open="(" close=")">
                    #{item,jdbcType=VARCHAR}
                </foreach>
                and TABLE_NAME2 in
                <foreach collection="tableName" item="item" index="index" separator="," open="(" close=")">
                    #{item,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="column1 != null and column1 != ''">
                AND ( T.COLUMN1 LIKE '%' || #{column1,jdbcType=VARCHAR} || '%'
                OR T.COLUMN2 LIKE '%' || #{column1,jdbcType=VARCHAR} || '%' )
            </if>
            <if test="tableName1 != null and tableName1 != ''">
                AND ( T.TABLE_NAME1 LIKE '%' || #{tableName1,jdbcType=VARCHAR} || '%'
                OR T.TABLE_NAME2 LIKE '%' || #{tableName1,jdbcType=VARCHAR} || '%' )
            </if>
        </where>
    </sql>

    <sql id="select_By_Filter_For_Where2" >
        <where>
            <choose>
                <when test="id != null and id != ''">
                    and ID = #{id,jdbcType=VARCHAR}
                </when>
                <otherwise>
                    and 1 = 2
                </otherwise>
            </choose>
            and rownum = 1
        </where>
    </sql>

    <select id="findTableConnectionList" resultMap="BaseResultMap" parameterType="com.hisign.code.model.business.TableConnection" >
        select p.* from(
            select
                rownum,rownum as rn,a.* from (
                select
                    <include refid="Base_Column_List" />
                from DB_TABLE_CONNECTION t
                <include refid="select_By_Filter_For_Where" />
                <if test="orderByString != null and orderByString != ''">
                    order by ${orderByString}
                </if>
                <if test="orderByString == null or orderByString == ''">
                    order by CREATE_DATE desc nulls last
                </if>
            ) a
            <if test="end != 0 and end !=null">
                where rownum <![CDATA[<=]]> #{end,jdbcType=INTEGER}
            </if>
        ) p
        <if test="begin != 0 and begin !=null">
            where rn >= #{begin, jdbcType=INTEGER}
        </if>
    </select>

    <select id="findTableConnectionListForCount" resultType="java.lang.Integer" parameterType="com.hisign.code.model.business.TableConnection" >
        select
            count(1)
        from DB_TABLE_CONNECTION t
        <include refid="select_By_Filter_For_Where" />
    </select>

    <delete id="deleteTableConnection" parameterType="com.hisign.code.model.business.TableConnection">
        DELETE FROM DB_TABLE_CONNECTION
        <include refid="select_By_Filter_For_Where2" />
    </delete>

    <insert id="insertTableConnection" parameterType="com.hisign.code.model.business.TableConnection" >
        insert into DB_TABLE_CONNECTION (
            ID,
            CONNECTION_NAME,
            TABLE_NAME1,
            COLUMN1,
            TABLE_NAME2,
            COLUMN2,
            CONNECTION_TYPE,
            CREATE_PID,
            CREATE_DATE,
            MODIFY_PID,
            MODIFY_DATE
        ) values (
            #{id,jdbcType=VARCHAR},
            #{user.connectionName,jdbcType=VARCHAR},
            #{tableName1,jdbcType=VARCHAR},
            #{column1,jdbcType=VARCHAR},
            #{tableName2,jdbcType=VARCHAR},
            #{column2,jdbcType=VARCHAR},
            #{connectionType,jdbcType=VARCHAR},
            #{user.userName,jdbcType=VARCHAR},
            sysdate,
            #{user.userName,jdbcType=VARCHAR},
            sysdate
        )
    </insert>

    <update id="updateTableConnection" parameterType="com.hisign.code.model.business.TableConnection" >
        update DB_TABLE_CONNECTION set
            TABLE_NAME1 = #{tableName1,jdbcType=VARCHAR},
            COLUMN1 = #{column1,jdbcType=VARCHAR},
            TABLE_NAME2 = #{tableName2,jdbcType=VARCHAR},
            COLUMN2 = #{column2,jdbcType=VARCHAR},
            CONNECTION_TYPE = #{connectionType,jdbcType=VARCHAR},
            MODIFY_PID = #{user.userName,jdbcType=VARCHAR},
            MODIFY_DATE = sysdate
        <include refid="select_By_Filter_For_Where2" />
    </update>

    <select id="findTableConnectionInfo" resultMap="BaseResultMap" parameterType="com.hisign.code.model.business.TableConnection" >
        select
            <include refid="Base_Column_List" />
        from DB_TABLE_CONNECTION t
        <include refid="select_By_Filter_For_Where2" />
    </select>

</mapper>